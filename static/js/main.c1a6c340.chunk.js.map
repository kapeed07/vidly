{"version":3,"sources":["components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/movies.jsx","utils.js","components/rental.jsx","components/common/navBar.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/not-found.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Like","liked","toggleLike","onClick","theme","type","TableHeader","raiseSort","path","sortColumn","props","order","handleMovieSort","this","columns","map","column","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","Fragment","MoviesTable","state","movie","to","title","color","numberInStock","handleMovieDelete","movies","genres","name","getGenres","filter","g","genre","dailyRentalRate","publishDate","Movies","pageSize","currentPage","selectedGenre","index","indexOf","setState","handleGenreSelect","handlePageChange","page","id","getPagedData","allMovies","filteredMovies","items","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","className","size","bordered","dataSource","renderItem","Item","defaultCurrent","hideOnSinglePage","onChange","total","Rental","NavBar","mode","Form","errors","validate","result","Joi","schema","abortEarly","error","details","message","validProperty","obj","handleSubmit","e","doSubmit","handleChange","errorMessage","currentTarget","renderButton","disable","renderSelect","options","placeholder","option","renderInput","movieForm","genreId","string","required","number","min","max","mapToViewModel","movieInDb","find","m","genresAPI","Date","now","toString","push","saveMovie","history","movieId","match","params","replace","Customers","NotFound","LoginForm","username","password","console","log","RegisterForm","email","App","span","offset","component","MovieForm","Rentals","from","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1a6c340.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Icon\n} from 'antd'\n\nconst Like = ({liked, toggleLike}) => {\n  return (\n    <div>\n      <Icon\n        onClick={ toggleLike }\n        theme={ liked ? 'filled' : '' }\n        type=\"heart\">\n      </Icon>\n    </div>\n  );\n}\n \nexport default Like;","import React, { Component } from 'react';\n\nimport {\n  Icon\n} from \"antd\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    let sortColumn = {...this.props.sortColumn}\n    if(sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    this.props.handleMovieSort(sortColumn)\n  }\n\n  render() {\n\n    const {\n      columns,\n      sortColumn\n    } = this.props;\n\n    const order = sortColumn.order === \"asc\" ? \"sort-ascending\" : \"sort-descending\";\n\n    return (\n      <thead>\n        <tr>\n          { columns.map(column => (\n            <th\n              key={ column.path || column.key }\n              onClick={ () => this.raiseSort(column.path) }>\n                { column.label }\n                <Icon type={ order } />\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from \"loadsh\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if(column.content) {\n      return column.content(item)\n    } else {\n      return _.get(item, column.path)\n    }\n  }\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key)\n  }\n  \n  render() { \n\n    const {\n      data,\n      columns\n    } = this.props;\n    \n    return (\n      <tbody>\n        { data.map(item => <tr key={ item._id }>\n          {columns.map(column => <td key={ this.createKey(item, column) }>{ this.renderCell(item, column) }</td>)}\n          </tr>)}\n      </tbody>\n    );\n  }\n}\n \nexport default TableBody;","import React from 'react';\nimport TableHeader from \"./tableHeader\"\nimport TableBody from \"./tableBody\"\n\nconst Table = (props) => {\n  const {\n    sortColumn,\n    handleMovieSort,\n    data,\n    columns\n  } = props;\n  \n  return (\n    <React.Fragment>\n      <TableHeader\n        sortColumn={ sortColumn }\n        handleMovieSort={ handleMovieSort }\n        columns={ columns }>\n      </TableHeader>\n\n      <TableBody\n        data={ data }\n        columns={ columns }>\n      </TableBody>\n    </React.Fragment>\n  );\n}\n \nexport default Table;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Tag\n} from 'antd';\n\nimport Like from \"./common/like\"\nimport Table from \"./common/table\"\n\n\nclass MoviesTable extends Component {\n  state = {  }\n\n  render() {\n    \n    const columns = [\n    { path: \"title\", label: \"Title\", content: movie => <Link to={`/movies/${movie._id}`}>{ movie.title }</Link> },\n      { path: \"genre.name\", label: \"Genre\" },\n      { path: \"numberInStock\", content: movie => (<Tag color=\"geekblue\">{ movie.numberInStock }</Tag>) },\n      { path: \"dailyRentalRate\", label: \"Rate \"},\n      { key: \"like\", content: movie => (<Like liked={ movie.liked } toggleLike={ () => this.props.toggleLike(movie) }></Like>) },\n      { key: \"delete\", content: movie => (<Button type=\"danger\" onClick={ () => this.props.handleMovieDelete(movie._id) }>Delete</Button>) }\n    ];\n    \n    const {\n      movies,\n      handleMovieSort,\n      sortColumn\n    } = this.props;\n    \n    return (\n      <table>\n        <Table\n          sortColumn={ sortColumn }\n          handleMovieSort={ handleMovieSort }\n          data={ movies }\n          columns={ columns }>\n        </Table>\n      </table>\n    );\n  }\n}\n \nexport default MoviesTable;","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from 'react';\nimport _ from 'loadsh';\nimport { Link } from 'react-router-dom'\nimport {\n  Pagination,\n  List,\n  Button\n} from 'antd';\n\nimport MoviesTable from \"./moviesTable\"\nimport { paginate } from \"./../utils\"\nimport { getMovies } from \"../services/fakeMovieService\"\nimport { getGenres } from \"../services/fakeGenreService\"\n\nclass Movies extends Component {\n  state = { \n    movies: [],\n    genres: [],\n    pageSize: 3,\n    currentPage: 1,\n    sortColumn: { path: 'title', order: 'asc' },\n    selectedGenre: \"\"\n  }\n\n  componentDidMount() {\n    let genres = [{ _id: \"\", name: \"All Genres\" } , ...getGenres()]\n    this.setState({ movies: getMovies(), genres })\n  }\n  \n  toggleLike = (movie) => {\n    let movies = [...this.state.movies]\n    let index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;    \n    this.setState({ movies })\n  }\n\n  handleMovieSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  }\n\n  handleGenreSelect = (genre) => {\n    const selectedGenre = genre;\n    this.setState({ selectedGenre, currentPage: 1 })\n  }\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page })\n  }\n\n  handleMovieDelete = (id) => {\n    let movies = this.state.movies.filter(movie => movie._id !== id);\n    this.setState({ movies })\n  }\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      sortColumn,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n\n    const filteredMovies = selectedGenre._id\n                            ? allMovies.filter(movie => movie.genre._id === selectedGenre._id)\n                            : allMovies;\n    \n    const sortedMovies = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order]);\n    \n    const data = paginate(sortedMovies, currentPage, pageSize);\n    const totalCount =filteredMovies.length;\n\n    return {\n      totalCount,\n      data\n    };\n  }\n\n  render() {\n    const {\n      genres,\n      sortColumn\n    } = this.state;\n    \n    const { totalCount, data: movies} = this.getPagedData();\n    \n    if(totalCount === 0)\n      return <p>There are no movies in the database.</p>\n\n    return (\n      <React.Fragment>\n        <div className=\"flex-col\">\n          <p>Showing { totalCount } movies in the database.</p>\n          <div className=\"flex flex-row\">\n            <div className=\"w-1/5\">\n              <List\n                size=\"small\"\n                bordered\n                dataSource={genres}\n                renderItem={item => (\n                  <List.Item onClick={ () => this.handleGenreSelect(item) }>{ item.name }</List.Item>\n                )}>\n              </List>\n            </div>\n            <div className=\"w-4/5\">\n              <Button type=\"primary\">\n                <Link to=\"/movies/new\">\n                  Add New\n                </Link>\n              </Button>\n              <MoviesTable\n                movies={ movies }\n                toggleLike={ this.toggleLike }\n                sortColumn={ sortColumn }\n                handleMovieSort={ this.handleMovieSort }\n                handleMovieDelete={ this.handleMovieDelete }>\n              </MoviesTable>\n            </div>\n          </div>\n          <Pagination\n            pageSize={ this.state.pageSize }\n            defaultCurrent={1}\n            hideOnSinglePage={ true }\n            onChange={ this.handlePageChange }\n            total={ totalCount }>\n          </Pagination>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default Movies;","import _ from 'loadsh';\n\nexport function paginate (items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}","import React, { Component } from 'react';\n\nclass Rental extends Component {\n  state = {  }\n  render() { \n    return (\n      <div>\n        Rental\n      </div>\n    );\n  }\n}\n \nexport default Rental;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { Menu } from \"antd\";\n\nclass NavBar extends Component {\n  state = {  }\n  render() { \n    return (\n      \n      <Menu mode=\"horizontal\">\n        <Menu.Item>\n          <Link to=\"/\">\n            Vidly\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/\">\n            Movies\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/customers\">\n          Customers\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/rentals\">\n            Rentals\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/login\">\n            Login\n          </Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to=\"/register\">\n            Register\n          </Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n \nexport default NavBar;","import React, { Component } from 'react';\n\nimport Joi from \"joi-browser\";\nclass Form extends Component {\n  state = { \n    data : {},\n    errors: {}\n  }\n\n  validate = () => {\n    let result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false\n    })\n    if(!result.error) {\n      return null;\n    }\n    let errors = {};\n    result.error.details.map(item => {\n      return errors[item.path[0]] = item.message\n    })\n    return errors;\n  }\n  \n  validProperty = ({ name, value }) => {\n    const obj = { [name]: value }\n    const schema = { [name]: this.schema[name] }\n    const { error } = Joi.validate(obj, schema)\n\n    return error ? error.details[0].message: null;\n  }\n\n  handleSubmit = (e) => {\n    const errors = this.validate();\n    this.setState({ errors })\n\n    if (this.state.errors) {\n      return;\n    } else {\n      this.doSubmit()\n    }\n  };\n\n  handleChange = (e) => {\n    const errorMessage = this.validProperty(e.currentTarget);\n    let { errors } = this.state;\n    errors[e.currentTarget.name] = errorMessage;\n\n    const data = {...this.state.data};\n    data[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ data });\n  }\n\n  renderButton = (label) => {\n    return (\n        <button disable={this.validate()} onClick={ this.handleSubmit } className=\"login-form-button\">\n          {label}\n        </button>\n      )\n  }\n\n  renderSelect = (name, label, options) => {\n    return (\n      <div>\n        <select onChange={ this.handleChange } name={name} placeholder={label}>\n          <option value=\"\">Select genre</option>\n          {options.map(option => (\n            <option key={option._id} value={option._id}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        <p>\n          { this.state.errors ? this.state.errors[name] : \"\" }\n        </p>\n      </div>\n      )\n  }\n\n  renderInput = (name, label, type = 'text') => {\n    return (\n      <div>\n        <input type={type} onChange={ this.handleChange } name={name} placeholder={label} />\n        <p>\n          { this.state.errors ? this.state.errors[name] : \"\" }\n        </p>\n      </div>\n      )\n  }\n  \n  render() { \n    return (\n      <React.Fragment></React.Fragment>\n    );\n  }\n}\n \nexport default Form;","import React from 'react';\n// import queryString from \"query-string\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\"\n\nimport { getGenres } from '../services/fakeGenreService';\nimport { getMovie, saveMovie } from '../services/fakeMovieService';\n\nclass movieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  }\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label('Title'),\n    genreId: Joi.string().required().label('Genre'),\n    numberInStock: Joi.number().required().min(0).max(100).label('Number in stock'),\n    dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily rental rate')\n  }\n\n  componentDidMount(){\n    const genres = getGenres();\n    this.setState({ genres });\n    const movieId = this.props.match.params.id;\n    if(movieId === 'new') {\n      return\n    }\n    const movie = getMovie(movieId);\n    if(!movie) {\n      return this.props.history.replace('/not-found');\n    }\n    this.setState({ data: this.mapToViewModel(movie)});\n  }\n\n  mapToViewModel = (movie) => {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    }\n  }\n\n  doSubmit = () => {\n    saveMovie(this.state.data);\n    this.props.history.push('/movies')\n  }\n\n  render() { \n    // const result = queryString.parse(this.props.location.search)\n    return (\n      <React.Fragment>\n        <h1>Movie Form</h1>\n        {this.renderInput('title', 'Title')}\n        {this.renderSelect('genreId', 'Genre', this.state.genres)}\n        {this.renderInput('numberInStock', 'Number in stock', 'number')}\n        {this.renderInput('dailyRentalRate', 'Rate')}\n        {this.renderButton('Save')}\n      </React.Fragment>\n    );\n  }\n}\n \nexport default movieForm;","import React, { Component } from 'react';\n// import queryString from \"query-string\";\n\nclass Customers extends Component {\n  state = {  }\n  render() { \n    // const result = queryString.parse(this.props.location.search)\n    return (\n      <div>\n        Customers\n      </div>\n    );\n  }\n}\n \nexport default Customers;","import React, { Component } from 'react';\n// import queryString from \"query-string\";\n\nclass NotFound extends Component {\n  state = {  }\n  render() { \n    // const result = queryString.parse(this.props.location.search)\n    return (\n      <div>\n        Not Found\n      </div>\n    );\n  }\n}\n \nexport default NotFound;","import React from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\"\n\nclass LoginForm extends Form {\n  state = { \n    data : { username: \"\", password: \"\"},\n    errors: { }\n  }\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\")\n  }\n\n  doSubmit = () => {\n    console.log(\"submitted\")\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderInput('username', 'Username')}\n        {this.renderInput('password', 'Password', 'password')}\n        {this.renderButton('Login')}\n      </React.Fragment>\n    );\n  }\n}\n \nexport default LoginForm;","import React from 'react';\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\"\n\nclass RegisterForm extends Form {\n  state = { \n    data : { username: \"\", password: \"\", name: \"\"},\n    errors: { }\n  }\n\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\")\n  }\n\n  doSubmit = () => {\n    console.log(\"submitted\")\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderInput('username', 'Username')}\n        {this.renderInput('password', 'Password', 'password')}\n        {this.renderInput('name', 'Name')}\n        {this.renderButton('Register')}\n      </React.Fragment>\n    );\n  }\n}\n \nexport default RegisterForm;","import React from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Row, Col } from 'antd';\nimport Movies from \"./components/movies\"\nimport Rentals from \"./components/rental\"\nimport NavBar from './components/common/navBar';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport NotFound from './components/not-found';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\n\nfunction App() {\n  return (\n    <Row>\n      <NavBar />\n      <Col span={12} offset={6}>\n        <Switch>\n          <Route path=\"/register\" component={ RegisterForm } />\n          <Route path=\"/login\" component={ LoginForm } />\n          <Route path=\"/movies/:id\" component={ MovieForm } />\n          <Route path=\"/movies\" component={ Movies } />\n          <Route path=\"/customers\" component={ Customers } />\n          <Route path=\"/rentals\" component={ Rentals } />\n          <Route path=\"/not-found\" component={ NotFound } />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </Col>\n    </Row>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}